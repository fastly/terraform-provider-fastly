on: pull_request
name: Pull request
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.19.x
    - name: Restore cache
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mod-
    - name: Fmt
      run: make fmt
    - name: Vet
      run: make vet
    - name: tfproviderlintx
      run: make tfproviderlintx
  test:
    strategy:
      matrix:
        go-version: [1.19.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    - name: Restore cache
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mod-
    - name: Test
      run: make test
  docs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.19.x
    - name: Generate Docs
      run: |
        make generate-docs
    - name: Check diff
      run: |
        git diff --exit-code --ignore-all-space ./docs/
  validate-interface:
    if: "!contains(github.event.pull_request.labels.*.name, 'breaking-change')"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.19.x
    - name: Restore cache
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mod-
    - name: Install Terraform CLI
      uses: hashicorp/setup-terraform@v2
    - name: Validate Interface
      run: make validate-interface
      env:
        FASTLY_API_KEY: ${{ secrets.FASTLY_API_TOKEN }}
  validate-goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.x
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-mod-
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          install-only: true
      - name: Validate Goreleaser
        run: make goreleaser GORELEASER_ARGS="--skip-validate --clean --snapshot" # snapshot is needed as local git has no tags
