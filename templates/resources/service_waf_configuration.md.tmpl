---
layout: "fastly"
page_title: "Fastly: service_waf_configuration"
sidebar_current: "docs-fastly-resource-service-waf-configuration"
description: |-
  Provides a Web Application Firewall configuration and rules that can be applied to a service.
---

-> **Note:** This resource is only available from 0.20.0 of the Fastly terraform provider.

# fastly_service_waf_configuration

Defines a set of Web Application Firewall configuration options that can be used to populate a service WAF. This resource will configure rules, thresholds and other settings for a WAF.


~> **Warning:** Terraform will take precedence over any changes you make in the UI or API. Such changes are likely to be reversed if you run Terraform again.


## Example Usage

Basic usage:

{{ tffile "examples/resources/service_waf_configuration_basic_usage.tf" }}

Usage with rules:

{{ tffile "examples/resources/service_waf_configuration_with_rules.tf" }}

Usage with rule exclusions:

~> **Warning:** Rule exclusions are part of a **beta release**, which may be subject to breaking changes and improvements over time. For more information, see our [product and feature lifecycle](https://docs.fastly.com/products/fastly-product-lifecycle#beta) descriptions.

{{ tffile "examples/resources/service_waf_configuration_with_rules_exclusions.tf" }}

Usage with rules from data source:

{{ tffile "examples/resources/service_waf_configuration_with_rules_from_data_source.tf" }}

Usage with support for individual rule configuration (this is the suggested pattern):

{{ tffile "examples/resources/service_waf_configuration_with_individual_rule.tf" }}

Usage with support for specific rule revision configuration:

{{ tffile "examples/resources/service_waf_configuration_with_specific_rule_revision.tf" }}

Usage omitting rule revision field. The first time Terraform is applied, the latest rule revisions are associated with the WAF. Any subsequent apply would not alter the rule revisions.

{{ tffile "examples/resources/service_waf_configuration_omitting_rule_revision.tf" }}

## Adding a WAF to an existing service

~> **Warning:** A two-phase change is required when adding a WAF to an existing service

When adding a `waf` to an existing `fastly_service_vcl` and at the same time adding a `fastly_service_waf_configuration`
resource with `waf_id = fastly_service_vcl.demo.waf[0].waf_id` might result with the in the following error:

> fastly_service_vcl.demo.waf is empty list of object

For this scenario, it's recommended to split the changes into two distinct steps:

1. Add the `waf` block to the `fastly_service_vcl` and apply the changes
2. Add the `fastly_service_waf_configuration` to the HCL and apply the changes

## Import

This is an example of the import command being applied to the resource named `fastly_service_waf_configuration.waf`
The resource ID should be the WAF ID.

{{ codefile "sh" "examples/resources/service_waf_configuration_import.txt" }}

If Terraform is already managing a remote WAF configurations against a resource being imported then the user will be asked to remove it from the existing Terraform state.
The following is an example of the Terraform state command to remove the resource named `fastly_service_waf_configuration.waf` from the Terraform state file.

{{ codefile "sh" "examples/resources/service_waf_configuration_rm_from_state.txt" }}

{{ .SchemaMarkdown | trimspace }}