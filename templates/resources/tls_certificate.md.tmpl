---
layout: "fastly"
page_title: "Fastly: tls_certificate"
sidebar_current: "docs-fastly-resource-tls_certificate"
description: |-
Uploads a custom TLS certificate
---

# fastly_tls_certificate

Uploads a custom TLS certificate to Fastly to be used to terminate TLS traffic.

-> Each TLS certificate **must** have its corresponding private key uploaded _prior_ to uploading the certificate. This
can be achieved in Terraform using [`depends_on`](https://www.terraform.io/docs/configuration/meta-arguments/depends_on.html)

## Example Usage

Basic usage:

{{ tffile "examples/resources/tls_certificate_basic_usage.tf" }}

## Updating certificates

There are three scenarios for updating a certificate:

1. The certificate is about to expire but the private key stays the same.
2. The certificate is about to expire but the private key is changing.
3. The domains on the certificate are changing.

In the first scenario you only need to update the `certificate_body` attribute of the `fastly_tls_certificate` resource, while the other scenarios require a new private key (`fastly_tls_private_key`) and certificate (`fastly_tls_certificate`) to be generated.

When updating both the `fastly_tls_private_key` and `fastly_tls_certificate` resources, they should be done in multiple plan/apply steps to avoid potential downtime. The new certificate and associated private key must first be created so they exist alongside the currently active resources. Once the new resources have been created, then the `fastly_tls_activation` can be updated to point to the new certificate. Finally, the original key/certificate resources can be deleted.

## Import

A certificate can be imported using its Fastly certificate ID, e.g.

{{ codefile "sh" "examples/resources/tls_certificate_import.txt" }}

{{ .SchemaMarkdown | trimspace }}
