{{define "tls_platform_certificate"}}---
layout: "fastly"
page_title: "Fastly: tls_platform_certificate"
sidebar_current: "docs-fastly-resource-tls_platform_certificate"
description: |-
Uploads a TLS certificate to the Platform TLS service
---

# fastly_tls_platform_certificate

Uploads a TLS certificate to the Fastly Platform TLS service.

-> Each TLS certificate **must** have its corresponding private uploaded _prior_ to uploading the certificate. This can
be achieved in Terraform using [`depends_on`](https://www.terraform.io/docs/configuration/meta-arguments/depends_on.html)

## Example Usage

Basic usage with self-signed CA:

```hcl
resource "tls_private_key" "ca_key" {
  algorithm = "RSA"
}

resource "tls_private_key" "key" {
  algorithm = "RSA"
}

resource "tls_self_signed_cert" "ca" {
  key_algorithm   = tls_private_key.ca_key.algorithm
  private_key_pem = tls_private_key.ca_key.private_key_pem

  subject {
    common_name = "Example CA"
  }

  is_ca_certificate     = true
  validity_period_hours = 360

  allowed_uses = [
    "cert_signing",
    "server_auth",
  ]
}

resource "tls_cert_request" "example" {
  key_algorithm   = tls_private_key.key.algorithm
  private_key_pem = tls_private_key.key.private_key_pem

  subject {
    common_name = "example.com"
  }

  dns_names = ["example.com", "www.example.com"]
}

resource "tls_locally_signed_cert" "cert" {
  cert_request_pem   = tls_cert_request.example.cert_request_pem
  ca_key_algorithm   = tls_private_key.ca_key.algorithm
  ca_private_key_pem = tls_private_key.ca_key.private_key_pem
  ca_cert_pem        = tls_self_signed_cert.ca.cert_pem

  validity_period_hours = 360

  allowed_uses = [
    "cert_signing",
    "server_auth",
  ]
}

data "fastly_tls_configuration" "config" {
  tls_service = "PLATFORM"
}

resource "fastly_tls_private_key" "key" {
  key_pem = tls_private_key.key.private_key_pem
  name    = "tf-demo"
}

resource "fastly_tls_platform_certificate" "cert" {
  certificate_body   = tls_locally_signed_cert.cert.cert_pem
  intermediates_blob = tls_self_signed_cert.ca.cert_pem

  configuration_id     = data.fastly_tls_configuration.config.id
  allow_untrusted_root = true

  depends_on = [fastly_tls_private_key.key]
}
```

## Argument Reference

The following arguments are supported:

* `certificate_body` - (Required) PEM-formatted certificate
* `intermediates_blob` - (Required) PEM-formatted certificate chain from the `certificate_body` to its root.
* `configuration_id` - (Required) ID of TLS configuration to be used to terminate TLS traffic.
* `allow_untrusted_root` - (Optional) Disable checking whether the root of the certificate chain is trusted. Useful for development purposes to allow use of self-signed CAs. Defaults to false.

## Attributes Reference

In addition to the arguments listed above, the following attributes are exported:

* `created_at` - Timestamp (GMT) when the certificate was created.
* `updated_at` - Timestamp (GMT) when the certificate was last updated.
* `not_after` - Timestamp (GMT) when the certificate will expire.
* `not_before` - Timestamp (GMT) when the certificate will become valid.
* `replace` - A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.
* `domains` - All the domains (including wildcard domains) that are listed in any certificate's Subject Alternative
  Names (SAN) list.


## Import

A certificate can be imported using its Fastly certificate ID, e.g.

```
$ terraform import fastly_tls_platform_certificate.demo xxxxxxxxxxx
```
{{end}}